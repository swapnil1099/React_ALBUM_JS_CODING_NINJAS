{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\STUDY\\\\album-list_3\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { ToastContainer } from \"react-toastify\";\nimport { Routes, Route } from \"react-router-dom\";\nimport AddAlbum from './AddAlbum.js';\nimport AlbumsList from './AlbumList';\nimport UpdateAlbum from './UpdateAlbums.js';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    //  componentDidMount  function to fetch all the List from the ApI\n    this.componentDidMount = async () => {\n      const albums = await fetch('https://jsonplaceholder.typicode.com/albums').then(response => response.json()).then(json => {\n        console.log(json);\n        return json;\n      });\n      this.setState({\n        albums\n      });\n    };\n    //This function  is used to take album id from albums list and then delete \n    // the album from albums list and update state....\n    this.deleteAlbumFromList = id => {\n      fetch(`https://jsonplaceholder.typicode.com/albums/${id}`, {\n        method: 'DELETE'\n      });\n      const newAlbums = this.state.albums.filter(album => album.id !== id);\n      toast.success(\"Your Album Deleted successfully From The List\");\n      this.setState({\n        albums: newAlbums\n      });\n    };\n    //This function  is used to take album object from albums list\n    //  and set  the state for update albums\n    this.setUpdateAlbum = async album => {\n      this.setState({\n        updateAlbum: album\n      });\n    };\n    //updateAlbumInList function Updates The Album data \n    // like (album id,UpdateTitle,updateUserid, oldAlbum and then update and set state )\n    this.updateAlbumInList = async (id, updateTitle, updateUserid, oldAlbum) => {\n      const albums = this.state.albums;\n      const index = albums.indexOf(oldAlbum);\n      let updatedAlbum = [];\n      if (id < 100) {\n        updatedAlbum = await fetch(`https://jsonplaceholder.typicode.com/albums/${id}`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            userId: updateUserid,\n            id: id,\n            title: updateTitle\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8'\n          }\n        }).then(response => response.json()).then(json => json);\n      } else {\n        updatedAlbum = {\n          userId: updateUserid,\n          id: id,\n          title: updateTitle\n        };\n      }\n      albums[index] = updatedAlbum;\n      this.setState({\n        albums: albums\n      });\n      toast.success(\"Album Updated Successfully\");\n    };\n    //addAlbumToList function is used to Add The Album in the Album List\n    this.addAlbumToList = (userId, title) => {\n      fetch('https://jsonplaceholder.typicode.com/albums', {\n        method: 'POST',\n        body: JSON.stringify({\n          userId: userId,\n          id: this.state.count,\n          title: title\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      }).then(response => response.json()).then(json => json);\n      const length = this.state.albums.length;\n      const lastId = this.state.albums[length - 1].id;\n      const album = {\n        userId: userId,\n        id: lastId + 1,\n        title: title\n      };\n      this.setState({\n        albums: [...this.state.albums, album]\n      });\n      toast.success(\"New Album added successfully in the bottom!!\");\n    };\n    this.state = {\n      albums: [],\n      updateAlbum: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(AlbumsList, {\n            albums: this.state.albums,\n            setUpdateAlbum: this.setUpdateAlbum,\n            deleteAlbumFromList: this.deleteAlbumFromList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add-album\",\n          element: /*#__PURE__*/_jsxDEV(AddAlbum, {\n            addAlbumToList: this.addAlbumToList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/update-album\",\n          element: /*#__PURE__*/_jsxDEV(UpdateAlbum, {\n            album: this.state.updateAlbum,\n            updateAlbumInList: this.updateAlbumInList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","Component","ToastContainer","Routes","Route","AddAlbum","AlbumsList","UpdateAlbum","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","componentDidMount","albums","fetch","then","response","json","console","log","setState","deleteAlbumFromList","id","method","newAlbums","state","filter","album","success","setUpdateAlbum","updateAlbum","updateAlbumInList","updateTitle","updateUserid","oldAlbum","index","indexOf","updatedAlbum","body","JSON","stringify","userId","title","headers","addAlbumToList","count","length","lastId","render","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element"],"sources":["C:/Users/HP/Desktop/STUDY/album-list_3/src/components/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { ToastContainer } from \"react-toastify\";\nimport { Routes, Route } from \"react-router-dom\";\nimport AddAlbum from './AddAlbum.js';\nimport AlbumsList from './AlbumList';\nimport UpdateAlbum from './UpdateAlbums.js';\nimport { toast } from 'react-toastify';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      albums: [],\n      updateAlbum: {}\n    }\n  }\n\n  //  componentDidMount  function to fetch all the List from the ApI\n  componentDidMount = async () => {\n    const albums = await fetch('https://jsonplaceholder.typicode.com/albums')\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json)\n        return json;\n      }\n      );\n    this.setState({\n      albums\n    })\n  }\n\n\n\n\n  //This function  is used to take album id from albums list and then delete \n  // the album from albums list and update state....\n  deleteAlbumFromList = (id) => {\n    fetch(`https://jsonplaceholder.typicode.com/albums/${id}`, { method: 'DELETE', })\n    const newAlbums = this.state.albums.filter((album) => album.id !== id);\n    toast.success(\"Your Album Deleted successfully From The List\")\n\n\n    this.setState({\n      albums: newAlbums,\n    })\n  }\n\n\n\n\n  //This function  is used to take album object from albums list\n  //  and set  the state for update albums\n  setUpdateAlbum = async (album) => {\n    this.setState({\n      updateAlbum: album\n    })\n  }\n\n\n  //updateAlbumInList function Updates The Album data \n  // like (album id,UpdateTitle,updateUserid, oldAlbum and then update and set state )\n\n  updateAlbumInList = async (id, updateTitle, updateUserid, oldAlbum) => {\n    const albums = this.state.albums;\n    const index = albums.indexOf(oldAlbum);\n    let updatedAlbum = [];\n    if (id < 100) {\n      updatedAlbum = await fetch(`https://jsonplaceholder.typicode.com/albums/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          userId: updateUserid,\n          id: id,\n          title: updateTitle,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      }).then((response) => response.json()).then((json) => json);\n    } else {\n      updatedAlbum = {\n        userId: updateUserid,\n        id: id,\n        title: updateTitle\n      }\n    }\n    albums[index] = updatedAlbum;\n    this.setState({\n      albums: albums\n    })\n    toast.success(\"Album Updated Successfully\")\n\n\n  }\n\n\n\n  //addAlbumToList function is used to Add The Album in the Album List\n\n  addAlbumToList = (userId, title) => {\n    fetch('https://jsonplaceholder.typicode.com/albums', {\n      method: 'POST',\n      body: JSON.stringify({\n        userId: userId,\n        id: this.state.count,\n        title: title,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then((response) => response.json()).then((json) => json);\n    const length = this.state.albums.length;\n    const lastId = this.state.albums[length - 1].id;\n    const album = {\n      userId: userId,\n      id: lastId + 1,\n      title: title,\n    }\n    this.setState({\n      albums: [...this.state.albums, album]\n    })\n    toast.success(\"New Album added successfully in the bottom!!\")\n\n  }\n\n\n  render() {\n    return (\n      <>\n        <ToastContainer />\n        <Routes>\n          <Route path='/' element={<AlbumsList albums={this.state.albums} setUpdateAlbum={this.setUpdateAlbum} deleteAlbumFromList={this.deleteAlbumFromList} />}></Route>\n          <Route path='/add-album' element={<AddAlbum addAlbumToList={this.addAlbumToList} />}></Route>\n          <Route path='/update-album' element={<UpdateAlbum album={this.state.updateAlbum} updateAlbumInList={this.updateAlbumInList} />}></Route>\n        </Routes>\n      </>\n    )\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,eAAe,MAAMC,GAAG,SAASZ,SAAS,CAAC;EACzCa,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAOT;IAAA,KACAC,iBAAiB,GAAG,YAAY;MAC9B,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC,CACtEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,OAAOA,IAAI;MACb,CACA,CAAC;MACH,IAAI,CAACG,QAAQ,CAAC;QACZP;MACF,CAAC,CAAC;IACJ,CAAC;IAKD;IACA;IAAA,KACAQ,mBAAmB,GAAIC,EAAE,IAAK;MAC5BR,KAAK,CAAE,+CAA8CQ,EAAG,EAAC,EAAE;QAAEC,MAAM,EAAE;MAAU,CAAC,CAAC;MACjF,MAAMC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACZ,MAAM,CAACa,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACL,EAAE,KAAKA,EAAE,CAAC;MACtEjB,KAAK,CAACuB,OAAO,CAAC,+CAA+C,CAAC;MAG9D,IAAI,CAACR,QAAQ,CAAC;QACZP,MAAM,EAAEW;MACV,CAAC,CAAC;IACJ,CAAC;IAKD;IACA;IAAA,KACAK,cAAc,GAAG,MAAOF,KAAK,IAAK;MAChC,IAAI,CAACP,QAAQ,CAAC;QACZU,WAAW,EAAEH;MACf,CAAC,CAAC;IACJ,CAAC;IAGD;IACA;IAAA,KAEAI,iBAAiB,GAAG,OAAOT,EAAE,EAAEU,WAAW,EAAEC,YAAY,EAAEC,QAAQ,KAAK;MACrE,MAAMrB,MAAM,GAAG,IAAI,CAACY,KAAK,CAACZ,MAAM;MAChC,MAAMsB,KAAK,GAAGtB,MAAM,CAACuB,OAAO,CAACF,QAAQ,CAAC;MACtC,IAAIG,YAAY,GAAG,EAAE;MACrB,IAAIf,EAAE,GAAG,GAAG,EAAE;QACZe,YAAY,GAAG,MAAMvB,KAAK,CAAE,+CAA8CQ,EAAG,EAAC,EAAE;UAC9EC,MAAM,EAAE,KAAK;UACbe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,MAAM,EAAER,YAAY;YACpBX,EAAE,EAAEA,EAAE;YACNoB,KAAK,EAAEV;UACT,CAAC,CAAC;UACFW,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC,CAAC5B,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAKA,IAAI,CAAC;MAC7D,CAAC,MAAM;QACLoB,YAAY,GAAG;UACbI,MAAM,EAAER,YAAY;UACpBX,EAAE,EAAEA,EAAE;UACNoB,KAAK,EAAEV;QACT,CAAC;MACH;MACAnB,MAAM,CAACsB,KAAK,CAAC,GAAGE,YAAY;MAC5B,IAAI,CAACjB,QAAQ,CAAC;QACZP,MAAM,EAAEA;MACV,CAAC,CAAC;MACFR,KAAK,CAACuB,OAAO,CAAC,4BAA4B,CAAC;IAG7C,CAAC;IAID;IAAA,KAEAgB,cAAc,GAAG,CAACH,MAAM,EAAEC,KAAK,KAAK;MAClC5B,KAAK,CAAC,6CAA6C,EAAE;QACnDS,MAAM,EAAE,MAAM;QACde,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAEA,MAAM;UACdnB,EAAE,EAAE,IAAI,CAACG,KAAK,CAACoB,KAAK;UACpBH,KAAK,EAAEA;QACT,CAAC,CAAC;QACFC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CAAC5B,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACF,IAAI,CAAEE,IAAI,IAAKA,IAAI,CAAC;MAC3D,MAAM6B,MAAM,GAAG,IAAI,CAACrB,KAAK,CAACZ,MAAM,CAACiC,MAAM;MACvC,MAAMC,MAAM,GAAG,IAAI,CAACtB,KAAK,CAACZ,MAAM,CAACiC,MAAM,GAAG,CAAC,CAAC,CAACxB,EAAE;MAC/C,MAAMK,KAAK,GAAG;QACZc,MAAM,EAAEA,MAAM;QACdnB,EAAE,EAAEyB,MAAM,GAAG,CAAC;QACdL,KAAK,EAAEA;MACT,CAAC;MACD,IAAI,CAACtB,QAAQ,CAAC;QACZP,MAAM,EAAE,CAAC,GAAG,IAAI,CAACY,KAAK,CAACZ,MAAM,EAAEc,KAAK;MACtC,CAAC,CAAC;MACFtB,KAAK,CAACuB,OAAO,CAAC,8CAA8C,CAAC;IAE/D,CAAC;IA/GC,IAAI,CAACH,KAAK,GAAG;MACXZ,MAAM,EAAE,EAAE;MACViB,WAAW,EAAE,CAAC;IAChB,CAAC;EACH;EA8GAkB,MAAMA,CAAA,EAAG;IACP,oBACEzC,OAAA,CAAAE,SAAA;MAAAwC,QAAA,gBACE1C,OAAA,CAACR,cAAc;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClB9C,OAAA,CAACP,MAAM;QAAAiD,QAAA,gBACL1C,OAAA,CAACN,KAAK;UAACqD,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEhD,OAAA,CAACJ,UAAU;YAACU,MAAM,EAAE,IAAI,CAACY,KAAK,CAACZ,MAAO;YAACgB,cAAc,EAAE,IAAI,CAACA,cAAe;YAACR,mBAAmB,EAAE,IAAI,CAACA;UAAoB;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChK9C,OAAA,CAACN,KAAK;UAACqD,IAAI,EAAC,YAAY;UAACC,OAAO,eAAEhD,OAAA,CAACL,QAAQ;YAAC0C,cAAc,EAAE,IAAI,CAACA;UAAe;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7F9C,OAAA,CAACN,KAAK;UAACqD,IAAI,EAAC,eAAe;UAACC,OAAO,eAAEhD,OAAA,CAACH,WAAW;YAACuB,KAAK,EAAE,IAAI,CAACF,KAAK,CAACK,WAAY;YAACC,iBAAiB,EAAE,IAAI,CAACA;UAAkB;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClI,CAAC;IAAA,eACT,CAAC;EAEP;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}